[
    {
        "description": "Returns the number of blocks in the longest blockchain.",
        "method": "get_tip_block_number",
        "module": "chain",
        "params": [],
        "result": "0x400"
    },
    {
        "description": "Returns the information about the tip header of the longest.",
        "method": "get_tip_header",
        "module": "chain",
        "params": [],
        "result": {
            "compact_target": "0x1e083126",
            "dao": "0xd040e08b93e8000039585fc1261dd700f6e18bdea63700000061eb7ada030000",
            "epoch": "0x7080018000001",
            "hash": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
            "nonce": "0x0",
            "number": "0x400",
            "parent_hash": "0xa607d253daae7c7c1292da49faa12fa02da44051eeaa4892286bf6fe8c6c4dd8",
            "proposals_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "timestamp": "0x5cd2b117",
            "transactions_root": "0x7fe9a50693f3e0a7418c7a99e9a298f8d0806b149bed700bb09c1f35a63100ce",
            "uncles_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "version": "0x0"
        }
    },
    {
        "description": "Returns the information about the current epoch.",
        "method": "get_current_epoch",
        "module": "chain",
        "params": [],
        "result": {
            "compact_target": 503853350,
            "length": "0x708",
            "number": "0x1",
            "start_number": "0x3e8"
        }
    },
    {
        "description": "Return the information corresponding the given epoch number.",
        "method": "get_epoch_by_number",
        "module": "chain",
        "params": [
            "0x0"
        ],
        "result": {
            "compact_target": 536936448,
            "length": "0x3e8",
            "number": "0x0",
            "start_number": "0x0"
        },
        "types": [
            {
                "epoch_number": "Epoch number"
            }
        ]
    },
    {
        "description": "Returns the hash of a block in the best-block-chain by block number; block of No.0 is the genesis block.",
        "method": "get_block_hash",
        "module": "chain",
        "params": [
            "0x400"
        ],
        "result": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
        "types": [
            {
                "block_number": "Number of a block"
            }
        ]
    },
    {
        "description": "Returns the information about a block by hash.",
        "method": "get_block",
        "module": "chain",
        "params": [
            "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953"
        ],
        "result": {
            "header": {
                "compact_target": "0x1e083126",
                "dao": "0xd040e08b93e8000039585fc1261dd700f6e18bdea63700000061eb7ada030000",
                "epoch": "0x7080018000001",
                "hash": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
                "nonce": "0x0",
                "number": "0x400",
                "parent_hash": "0xa607d253daae7c7c1292da49faa12fa02da44051eeaa4892286bf6fe8c6c4dd8",
                "proposals_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "timestamp": "0x5cd2b117",
                "transactions_root": "0x7fe9a50693f3e0a7418c7a99e9a298f8d0806b149bed700bb09c1f35a63100ce",
                "uncles_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "version": "0x0"
            },
            "proposals": [],
            "transactions": [
                {
                    "cell_deps": [],
                    "hash": "0x5540535f8bc68d800cde7170a2097711c41f2aeb376c87763cb4e4b30f830bfd",
                    "header_deps": [],
                    "inputs": [
                        {
                            "previous_output": {
                                "index": "0xffffffff",
                                "tx_hash": "0x0000000000000000000000000000000000000000000000000000000000000000"
                            },
                            "since": "0x400"
                        }
                    ],
                    "outputs": [
                        {
                            "capacity": "0x104ca73381",
                            "lock": {
                                "args": "0x",
                                "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                                "hash_type": "data"
                            },
                            "type": null
                        }
                    ],
                    "outputs_data": [
                        "0x"
                    ],
                    "version": "0x0",
                    "witnesses": [
                        "0x3500000010000000300000003100000028e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a50000000000"
                    ]
                }
            ],
            "uncles": []
        },
        "types": [
            {
                "hash": "Hash of a block"
            }
        ]
    },
    {
        "description": "Returns the information about a block header by hash.",
        "method": "get_header",
        "module": "chain",
        "params": [
            "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953"
        ],
        "result": {
            "compact_target": "0x1e083126",
            "dao": "0xd040e08b93e8000039585fc1261dd700f6e18bdea63700000061eb7ada030000",
            "epoch": "0x7080018000001",
            "hash": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
            "nonce": "0x0",
            "number": "0x400",
            "parent_hash": "0xa607d253daae7c7c1292da49faa12fa02da44051eeaa4892286bf6fe8c6c4dd8",
            "proposals_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "timestamp": "0x5cd2b117",
            "transactions_root": "0x7fe9a50693f3e0a7418c7a99e9a298f8d0806b149bed700bb09c1f35a63100ce",
            "uncles_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "version": "0x0"
        }
    },
    {
        "description": "Returns the information about a block header by block number.",
        "method": "get_header_by_number",
        "module": "chain",
        "params": [
            "0x400"
        ],
        "result": {
            "compact_target": "0x1e083126",
            "dao": "0xd040e08b93e8000039585fc1261dd700f6e18bdea63700000061eb7ada030000",
            "epoch": "0x7080018000001",
            "hash": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
            "nonce": "0x0",
            "number": "0x400",
            "parent_hash": "0xa607d253daae7c7c1292da49faa12fa02da44051eeaa4892286bf6fe8c6c4dd8",
            "proposals_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "timestamp": "0x5cd2b117",
            "transactions_root": "0x7fe9a50693f3e0a7418c7a99e9a298f8d0806b149bed700bb09c1f35a63100ce",
            "uncles_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "version": "0x0"
        }
    },
    {
        "description": "Returns the information about cells collection by the hash of lock script.",
        "method": "get_cells_by_lock_hash",
        "module": "chain",
        "params": [
            "0x4ceaa32f692948413e213ce6f3a83337145bde6e11fd8cb94377ce2637dcc412",
            "0x0",
            "0x2"
        ],
        "result": [
            {
                "block_hash": "0xaaf9a0e86865ec19685eb4ede6ae22fd44ef0e2721cd4f8d6ada5d3138e82b0e",
                "capacity": "0x2ca7071b9e",
                "lock": {
                    "args": "0x",
                    "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                    "hash_type": "data"
                },
                "out_point": {
                    "index": "0x0",
                    "tx_hash": "0x5169e6406ebed886ea1be802da474e3a46922556f06b1d88b23613f55630fcb4"
                }
            },
            {
                "block_hash": "0x9a1c68e551a2dce0f62b44b9998acc5d949bff513a74e2c26f979a0121668026",
                "capacity": "0x2ca7071b9e",
                "lock": {
                    "args": "0x",
                    "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                    "hash_type": "data"
                },
                "out_point": {
                    "index": "0x0",
                    "tx_hash": "0x5025c68fbad06bef0d2f16261edb30bf1e7dda8b80068cab1836fb4698f2fa40"
                }
            }
        ],
        "types": [
            {
                "lock_hash": "Cell lock script hash"
            },
            {
                "from": "Start block number"
            },
            {
                "to": "End block number"
            }
        ]
    },
    {
        "description": "Returns the information about a cell by out_point if it is live. If second with_data argument set to true, will return cell data and data_hash if it is live",
        "method": "get_live_cell",
        "module": "chain",
        "params": [
            {
                "index": "0x0",
                "tx_hash": "0xa4037a893eb48e18ed4ef61034ce26eba9c585f15c9cee102ae58505565eccc3"
            },
            true
        ],
        "result": {
            "cell": {
                "data": {
                    "content": "0x7f454c460201010000000000000000000200f3000100000078000100000000004000000000000000980000000000000005000000400038000100400003000200010000000500000000000000000000000000010000000000000001000000000082000000000000008200000000000000001000000000000001459308d00573000000002e7368737472746162002e74657874000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b000000010000000600000000000000780001000000000078000000000000000a0000000000000000000000000000000200000000000000000000000000000001000000030000000000000000000000000000000000000082000000000000001100000000000000000000000000000001000000000000000000000000000000",
                    "hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5"
                },
                "output": {
                    "capacity": "0x802665800",
                    "lock": {
                        "args": "0x",
                        "code_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                        "hash_type": "data"
                    },
                    "type": null
                }
            },
            "status": "live"
        },
        "types": [
            {
                "out_point": "OutPoint object {\"tx_hash\": <tx_hash>, \"index\": <index>}."
            },
            {
                "with_data": "Boolean"
            }
        ]
    },
    {
        "description": "Returns the local node information.",
        "method": "local_node_info",
        "module": "net",
        "params": [],
        "result": {
            "addresses": [
                {
                    "address": "/ip4/192.168.0.2/tcp/8112/p2p/QmTRHCdrRtgUzYLNCin69zEvPvLYdxUZLLfLYyHVY3DZAS",
                    "score": "0xff"
                },
                {
                    "address": "/ip4/0.0.0.0/tcp/8112/p2p/QmTRHCdrRtgUzYLNCin69zEvPvLYdxUZLLfLYyHVY3DZAS",
                    "score": "0x1"
                }
            ],
            "is_outbound": null,
            "node_id": "QmTRHCdrRtgUzYLNCin69zEvPvLYdxUZLLfLYyHVY3DZAS",
            "version": "0.0.0"
        },
        "skip": true
    },
    {
        "description": "Returns the connected peers information.",
        "method": "get_peers",
        "module": "net",
        "params": [],
        "result": [
            {
                "addresses": [
                    {
                        "address": "/ip4/192.168.0.3/tcp/8115",
                        "score": "0x1"
                    }
                ],
                "is_outbound": true,
                "node_id": "QmaaaLB4uPyDpZwTQGhV63zuYrKm4reyN2tF1j2ain4oE7",
                "version": "unknown"
            },
            {
                "addresses": [
                    {
                        "address": "/ip4/192.168.0.4/tcp/8113",
                        "score": "0xff"
                    }
                ],
                "is_outbound": false,
                "node_id": "QmRuGcpVC3vE7aEoB6fhUdq9uzdHbyweCnn1sDBSjfmcbM",
                "version": "unknown"
            },
            {
                "addresses": [],
                "node_id": "QmUddxwRqgTmT6tFujXbYPMLGLAE2Tciyv6uHGfdYFyDVa",
                "version": "unknown"
            }
        ],
        "skip": true
    },
    {
        "description": "Returns all banned IPs/Subnets.",
        "method": "get_banned_addresses",
        "module": "net",
        "params": [],
        "result": [
            {
                "address": "192.168.0.2/32",
                "ban_reason": "",
                "ban_until": "0x1ac89236180",
                "created_at": "0x16bde533338"
            }
        ],
        "skip": true
    },
    {
        "description": "Insert or delete an IP/Subnet from the banned list",
        "method": "set_ban",
        "module": "net",
        "params": [
            "192.168.0.2",
            "insert",
            "0x1ac89236180",
            true,
            "set_ban example"
        ],
        "result": null,
        "types": [
            {
                "address": "The IP/Subnet with an optional netmask (default is /32 = single IP)"
            },
            {
                "command": "`insert` to insert an IP/Subnet to the list, `delete` to delete an IP/Subnet from the list"
            },
            {
                "ban_time": "Time in milliseconds how long (or until when if [absolute] is set) the IP is banned, optional parameter, null means using the default time of 24h"
            },
            {
                "absolute": "If set, the `ban_time` must be an absolute timestamp in milliseconds since epoch, optional parameter"
            },
            {
                "reason": "Ban reason, optional parameter"
            }
        ]
    },
    {
        "description": "Return state info of blockchain",
        "method": "get_blockchain_info",
        "module": "stats",
        "params": [],
        "result": {
            "alerts": [
                {
                    "id": "0x2a",
                    "message": "An example alert message!",
                    "notice_until": "0x24bcca57c00",
                    "priority": "0x1"
                }
            ],
            "chain": "main",
            "difficulty": "0x1f4003",
            "epoch": "0x7080018000001",
            "is_initial_block_download": true,
            "median_time": "0x5cd2b105"
        }
    },
    {
        "description": "Deprecating in 0.12.0: Return state info of peers",
        "method": "get_peers_state",
        "module": "stats",
        "params": [],
        "result": [
            {
                "blocks_in_flight": "0x56",
                "last_updated": "0x16a95af332d",
                "peer": "0x1"
            }
        ],
        "skip": true
    },
    {
        "description": "Dry run transaction and return the execution cycles.\n\nThis method will not check the transaction validity, but only run the lock script\nand type script and then return the execution cycles.\nUsed to debug transaction scripts and query how many cycles the scripts consume",
        "method": "dry_run_transaction",
        "module": "experiment",
        "params": [
            {
                "cell_deps": [
                    {
                        "dep_type": "code",
                        "out_point": {
                            "index": "0x0",
                            "tx_hash": "0xa4037a893eb48e18ed4ef61034ce26eba9c585f15c9cee102ae58505565eccc3"
                        }
                    }
                ],
                "header_deps": [
                    "0xe1aaa28ae00c02a80f950a63ca3b066f2ffaa61dd7deac47f6ebe846c0d9c212"
                ],
                "inputs": [
                    {
                        "previous_output": {
                            "index": "0x0",
                            "tx_hash": "0x5169e6406ebed886ea1be802da474e3a46922556f06b1d88b23613f55630fcb4"
                        },
                        "since": "0x0"
                    }
                ],
                "outputs": [
                    {
                        "capacity": "0x174876e800",
                        "lock": {
                            "args": "0x",
                            "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                            "hash_type": "data"
                        },
                        "type": null
                    }
                ],
                "outputs_data": [
                    "0x"
                ],
                "version": "0x0",
                "witnesses": []
            }
        ],
        "result": {
            "cycles": "0x219"
        }
    },
    {
        "description": "Return the transaction hash\n\n**Deprecated**: will be removed in a later version",
        "method": "_compute_transaction_hash",
        "module": "experiment",
        "params": [
            {
                "cell_deps": [
                    {
                        "dep_type": "code",
                        "out_point": {
                            "index": "0x0",
                            "tx_hash": "0xa4037a893eb48e18ed4ef61034ce26eba9c585f15c9cee102ae58505565eccc3"
                        }
                    }
                ],
                "header_deps": [
                    "0xe1aaa28ae00c02a80f950a63ca3b066f2ffaa61dd7deac47f6ebe846c0d9c212"
                ],
                "inputs": [
                    {
                        "previous_output": {
                            "index": "0x0",
                            "tx_hash": "0x5169e6406ebed886ea1be802da474e3a46922556f06b1d88b23613f55630fcb4"
                        },
                        "since": "0x0"
                    }
                ],
                "outputs": [
                    {
                        "capacity": "0x174876e800",
                        "lock": {
                            "args": "0x",
                            "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                            "hash_type": "data"
                        },
                        "type": null
                    }
                ],
                "outputs_data": [
                    "0x"
                ],
                "version": "0x0",
                "witnesses": []
            }
        ],
        "result": "0x1c7f1c2c160e30a31fbfcb02bf180b07fb423e4b46ca07861e5f2a8dac228702",
        "types": [
            {
                "transaction": "The transaction object"
            },
            {
                "version": "Transaction version"
            },
            {
                "cell_deps": "Cell dependencies"
            },
            {
                "header_deps": "Header dependencies"
            },
            {
                "inputs": "Transaction inputs"
            },
            {
                "outputs": "Transaction outputs"
            },
            {
                "witnesses": "Witnesses"
            }
        ]
    },
    {
        "description": "Calculate the maximum withdraw one can get, given a referenced DAO cell, and a withdraw block hash",
        "method": "calculate_dao_maximum_withdraw",
        "module": "experiment",
        "params": [
            {
                "index": "0x0",
                "tx_hash": "0xa4037a893eb48e18ed4ef61034ce26eba9c585f15c9cee102ae58505565eccc3"
            },
            "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953"
        ],
        "result": "0x4a8b4e8a4",
        "skip": true,
        "types": [
            {
                "out_point": "OutPoint object {\"tx_hash\": <tx_hash>, \"index\": <index>}."
            },
            {
                "withdraw_block_hash": "Block hash"
            }
        ]
    },
    {
        "description": "Send new transaction into transaction pool\n\nIf <block_hash> of <previsous_output> is not specified, loads the corresponding input cell. If <block_hash> is specified, load the corresponding input cell only if the corresponding block exist and contain this cell as output.",
        "method": "send_transaction",
        "module": "pool",
        "params": [
            {
                "cell_deps": [
                    {
                        "dep_type": "code",
                        "out_point": {
                            "index": "0x0",
                            "tx_hash": "0xa4037a893eb48e18ed4ef61034ce26eba9c585f15c9cee102ae58505565eccc3"
                        }
                    }
                ],
                "header_deps": [
                    "0xe1aaa28ae00c02a80f950a63ca3b066f2ffaa61dd7deac47f6ebe846c0d9c212"
                ],
                "inputs": [
                    {
                        "previous_output": {
                            "index": "0x0",
                            "tx_hash": "0x5169e6406ebed886ea1be802da474e3a46922556f06b1d88b23613f55630fcb4"
                        },
                        "since": "0x0"
                    }
                ],
                "outputs": [
                    {
                        "capacity": "0x174876e800",
                        "lock": {
                            "args": "0x",
                            "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                            "hash_type": "data"
                        },
                        "type": null
                    }
                ],
                "outputs_data": [
                    "0x"
                ],
                "version": "0x0",
                "witnesses": []
            }
        ],
        "result": "0x1c7f1c2c160e30a31fbfcb02bf180b07fb423e4b46ca07861e5f2a8dac228702",
        "types": [
            {
                "transaction": "The transaction object"
            },
            {
                "version": "Transaction version"
            },
            {
                "cell_deps": "Cell dependencies"
            },
            {
                "header_deps": "Header dependencies"
            },
            {
                "inputs": "Transaction inputs"
            },
            {
                "outputs": "Transaction outputs"
            },
            {
                "witnesses": "Witnesses"
            }
        ]
    },
    {
        "description": "Returns the information about a transaction requested by transaction hash.",
        "method": "get_transaction",
        "module": "chain",
        "params": [
            "0x1c7f1c2c160e30a31fbfcb02bf180b07fb423e4b46ca07861e5f2a8dac228702"
        ],
        "result": {
            "transaction": {
                "cell_deps": [
                    {
                        "dep_type": "code",
                        "out_point": {
                            "index": "0x0",
                            "tx_hash": "0xa4037a893eb48e18ed4ef61034ce26eba9c585f15c9cee102ae58505565eccc3"
                        }
                    }
                ],
                "hash": "0x1c7f1c2c160e30a31fbfcb02bf180b07fb423e4b46ca07861e5f2a8dac228702",
                "header_deps": [
                    "0xe1aaa28ae00c02a80f950a63ca3b066f2ffaa61dd7deac47f6ebe846c0d9c212"
                ],
                "inputs": [
                    {
                        "previous_output": {
                            "index": "0x0",
                            "tx_hash": "0x5169e6406ebed886ea1be802da474e3a46922556f06b1d88b23613f55630fcb4"
                        },
                        "since": "0x0"
                    }
                ],
                "outputs": [
                    {
                        "capacity": "0x174876e800",
                        "lock": {
                            "args": "0x",
                            "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                            "hash_type": "data"
                        },
                        "type": null
                    }
                ],
                "outputs_data": [
                    "0x"
                ],
                "version": "0x0",
                "witnesses": []
            },
            "tx_status": {
                "block_hash": null,
                "status": "pending"
            }
        },
        "types": [
            {
                "hash": "Hash of a transaction"
            }
        ]
    },
    {
        "description": "Returns each component of the created CKB in this block's cellbase, which is issued to a block N - 1 - ProposalWindow.farthest, where this block's height is N.",
        "method": "get_cellbase_output_capacity_details",
        "module": "chain",
        "params": [
            "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953"
        ],
        "result": {
            "primary": "0x102b36211d",
            "proposal_reward": "0x0",
            "secondary": "0x21711264",
            "total": "0x104ca73381",
            "tx_fee": "0x0"
        },
        "types": [
            {
                "hash": "Block hash"
            }
        ]
    },
    {
        "description": "Return the transaction pool information",
        "method": "tx_pool_info",
        "module": "pool",
        "params": [],
        "result": {
            "last_txs_updated_at": "0x0",
            "orphan": "0x0",
            "pending": "0x1",
            "proposed": "0x0",
            "total_tx_cycles": "0x219",
            "total_tx_size": "0x112"
        }
    },
    {
        "description": "Get block by number",
        "method": "get_block_by_number",
        "module": "chain",
        "params": [
            "0x400"
        ],
        "result": {
            "header": {
                "compact_target": "0x1e083126",
                "dao": "0xd040e08b93e8000039585fc1261dd700f6e18bdea63700000061eb7ada030000",
                "epoch": "0x7080018000001",
                "hash": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
                "nonce": "0x0",
                "number": "0x400",
                "parent_hash": "0xa607d253daae7c7c1292da49faa12fa02da44051eeaa4892286bf6fe8c6c4dd8",
                "proposals_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "timestamp": "0x5cd2b117",
                "transactions_root": "0x7fe9a50693f3e0a7418c7a99e9a298f8d0806b149bed700bb09c1f35a63100ce",
                "uncles_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "version": "0x0"
            },
            "proposals": [],
            "transactions": [
                {
                    "cell_deps": [],
                    "hash": "0x5540535f8bc68d800cde7170a2097711c41f2aeb376c87763cb4e4b30f830bfd",
                    "header_deps": [],
                    "inputs": [
                        {
                            "previous_output": {
                                "index": "0xffffffff",
                                "tx_hash": "0x0000000000000000000000000000000000000000000000000000000000000000"
                            },
                            "since": "0x400"
                        }
                    ],
                    "outputs": [
                        {
                            "capacity": "0x104ca73381",
                            "lock": {
                                "args": "0x",
                                "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                                "hash_type": "data"
                            },
                            "type": null
                        }
                    ],
                    "outputs_data": [
                        "0x"
                    ],
                    "version": "0x0",
                    "witnesses": [
                        "0x3500000010000000300000003100000028e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a50000000000"
                    ]
                }
            ],
            "uncles": []
        },
        "types": [
            {
                "block_number": "Number of a block"
            }
        ]
    },
    {
        "description": "Create index for live cells and transactions by the hash of lock script.",
        "method": "index_lock_hash",
        "module": "indexer",
        "params": [
            "0x4ceaa32f692948413e213ce6f3a83337145bde6e11fd8cb94377ce2637dcc412",
            "0x400"
        ],
        "result": {
            "block_hash": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
            "block_number": "0x400",
            "lock_hash": "0x4ceaa32f692948413e213ce6f3a83337145bde6e11fd8cb94377ce2637dcc412"
        },
        "types": [
            {
                "lock_hash": "Cell lock script hash"
            },
            {
                "index_from": "Create an index from starting block number (exclusive), an optional parameter, null means starting from tip and 0 means starting from genesis"
            }
        ]
    },
    {
        "description": "Get lock hash index states",
        "method": "get_lock_hash_index_states",
        "module": "indexer",
        "params": [],
        "result": [
            {
                "block_hash": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
                "block_number": "0x400",
                "lock_hash": "0x4ceaa32f692948413e213ce6f3a83337145bde6e11fd8cb94377ce2637dcc412"
            }
        ]
    },
    {
        "description": "Returns the live cells collection by the hash of lock script.",
        "method": "get_live_cells_by_lock_hash",
        "module": "indexer",
        "params": [
            "0x4ceaa32f692948413e213ce6f3a83337145bde6e11fd8cb94377ce2637dcc412",
            "0x0",
            "0x2"
        ],
        "result": [
            {
                "cell_output": {
                    "capacity": "0x2ca7071b9e",
                    "lock": {
                        "args": "0x",
                        "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                        "hash_type": "data"
                    },
                    "type": null
                },
                "created_by": {
                    "block_number": "0x1",
                    "index": "0x0",
                    "tx_hash": "0x5169e6406ebed886ea1be802da474e3a46922556f06b1d88b23613f55630fcb4"
                }
            },
            {
                "cell_output": {
                    "capacity": "0x2ca7071b9e",
                    "lock": {
                        "args": "0x",
                        "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                        "hash_type": "data"
                    },
                    "type": null
                },
                "created_by": {
                    "block_number": "0x2",
                    "index": "0x0",
                    "tx_hash": "0x5025c68fbad06bef0d2f16261edb30bf1e7dda8b80068cab1836fb4698f2fa40"
                }
            }
        ],
        "types": [
            {
                "lock_hash": "Cell lock script hash"
            },
            {
                "page": "Page number"
            },
            {
                "per": "Page size, max value is 50"
            },
            {
                "reverse_order": "Returns the live cells collection in reverse order, an optional parameter, default is false"
            }
        ]
    },
    {
        "description": "Returns the transactions collection by the hash of lock script. Returns empty array when the `lock_hash` has not been indexed yet.",
        "method": "get_transactions_by_lock_hash",
        "module": "indexer",
        "params": [
            "0x4ceaa32f692948413e213ce6f3a83337145bde6e11fd8cb94377ce2637dcc412",
            "0x0",
            "0x2"
        ],
        "result": [
            {
                "consumed_by": null,
                "created_by": {
                    "block_number": "0x1",
                    "index": "0x0",
                    "tx_hash": "0x5169e6406ebed886ea1be802da474e3a46922556f06b1d88b23613f55630fcb4"
                }
            },
            {
                "consumed_by": null,
                "created_by": {
                    "block_number": "0x2",
                    "index": "0x0",
                    "tx_hash": "0x5025c68fbad06bef0d2f16261edb30bf1e7dda8b80068cab1836fb4698f2fa40"
                }
            }
        ],
        "types": [
            {
                "lock_hash": "Cell lock script hash"
            },
            {
                "page": "Page number"
            },
            {
                "per": "Page size, max value is 50"
            },
            {
                "reverse_order": "Return the transactions collection in reverse order, an optional parameter, default is false"
            }
        ]
    },
    {
        "description": "Remove index for live cells and transactions by the hash of lock script.",
        "method": "deindex_lock_hash",
        "module": "indexer",
        "params": [
            "0x4ceaa32f692948413e213ce6f3a83337145bde6e11fd8cb94377ce2637dcc412"
        ],
        "result": null,
        "types": [
            {
                "lock_hash": "Cell lock script hash"
            }
        ]
    },
    {
        "description": "Returns script hash of given transaction script\n\n**Deprecated**: will be removed in a later version",
        "method": "_compute_script_hash",
        "module": "experiment",
        "params": [
            {
                "args": "0x",
                "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                "hash_type": "data"
            }
        ],
        "result": "0x4ceaa32f692948413e213ce6f3a83337145bde6e11fd8cb94377ce2637dcc412",
        "types": [
            {
                "args": "Hex encoded arguments passed to reference cell"
            },
            {
                "code_hash": "Code hash of referenced cell"
            },
            {
                "hash_type": "data: code_hash matches against dep cell data hash; type: code_hash matches against dep cell type hash."
            }
        ]
    },
    {
        "description": "Returns data needed to construct a block to work on",
        "method": "get_block_template",
        "module": "miner",
        "params": [
            null,
            null,
            null
        ],
        "result": {
            "bytes_limit": "0x22d387",
            "cellbase": {
                "cycles": null,
                "data": {
                    "cell_deps": [],
                    "header_deps": [],
                    "inputs": [
                        {
                            "previous_output": {
                                "index": "0xffffffff",
                                "tx_hash": "0x0000000000000000000000000000000000000000000000000000000000000000"
                            },
                            "since": "0x1"
                        }
                    ],
                    "outputs": [
                        {
                            "capacity": "0x1d1a94a200",
                            "lock": {
                                "args": [
                                    "0xb2e61ff569acf041b3c2c17724e2379c581eeac3"
                                ],
                                "code_hash": "0x1892ea40d82b53c678ff88312450bbb17e164d7a3e0a90941aa58839f56f8df2",
                                "hash_type": "type"
                            },
                            "type": null
                        }
                    ],
                    "outputs_data": [
                        "0x"
                    ],
                    "version": "0x0",
                    "witnesses": [
                        {
                            "data": [
                                "0x1892ea40d82b53c678ff88312450bbb17e164d7a3e0a90941aa58839f56f8df201",
                                "0x"
                            ]
                        }
                    ]
                },
                "hash": "0x076049e2cc6b9f1ed4bb27b2337c55071dabfaf0183b1b17a4965bd0372d8dec"
            },
            "current_time": "0x16d6269e84f",
            "cycles_limit": "0x2540be400",
            "dao": "0x004fb9e277860700b2f80165348723003d1862ec960000000028eb3d7e7a0100",
            "difficulty": "0x100",
            "epoch": "0x3e80001000000",
            "number": "0x1",
            "parent_hash": "0xd5c495b7dd4d9d066a6a4d4356bc31955ad3199e0d856f34cfbe159c46ee335b",
            "proposals": [],
            "transactions": [],
            "uncles": [],
            "uncles_count_limit": "0x2",
            "version": "0x0",
            "work_id": "0x0"
        },
        "skip": true,
        "types": [
            {
                "bytes_limit": "optional number, specify the max bytes of block"
            },
            {
                "proposals_limit": "optional number, specify the max proposals of block"
            },
            {
                "max_version": "optional number, specify the max block version"
            }
        ]
    },
    {
        "description": "Submit new block to network",
        "method": "submit_block",
        "module": "miner",
        "params": [
            "example",
            {
                "header": {
                    "compact_target": "0x1e083126",
                    "dao": "0xd040e08b93e8000039585fc1261dd700f6e18bdea63700000061eb7ada030000",
                    "epoch": "0x7080018000001",
                    "nonce": "0x0",
                    "number": "0x400",
                    "parent_hash": "0xa607d253daae7c7c1292da49faa12fa02da44051eeaa4892286bf6fe8c6c4dd8",
                    "proposals_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "timestamp": "0x5cd2b117",
                    "transactions_root": "0x7fe9a50693f3e0a7418c7a99e9a298f8d0806b149bed700bb09c1f35a63100ce",
                    "uncles_hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "version": "0x0"
                },
                "proposals": [],
                "transactions": [
                    {
                        "cell_deps": [],
                        "header_deps": [],
                        "inputs": [
                            {
                                "previous_output": {
                                    "index": "0xffffffff",
                                    "tx_hash": "0x0000000000000000000000000000000000000000000000000000000000000000"
                                },
                                "since": "0x400"
                            }
                        ],
                        "outputs": [
                            {
                                "capacity": "0x104ca73381",
                                "lock": {
                                    "args": "0x",
                                    "code_hash": "0x28e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a5",
                                    "hash_type": "data"
                                },
                                "type": null
                            }
                        ],
                        "outputs_data": [
                            "0x"
                        ],
                        "version": "0x0",
                        "witnesses": [
                            "0x3500000010000000300000003100000028e83a1277d48add8e72fadaa9248559e1b632bab2bd60b27955ebc4c03800a50000000000"
                        ]
                    }
                ],
                "uncles": []
            }
        ],
        "result": "0x806b570b61df8196346faeb570fdb33fbdf833613c9a9c519f06b7f6ebed2953",
        "types": [
            {
                "work_id": "the identifier to proof-of-work"
            },
            {
                "block": "new block"
            }
        ]
    }
]