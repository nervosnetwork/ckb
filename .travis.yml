language: rust
rust: 1.34.2
dist: xenial
sudo: true
cache:
  cargo: true
  timeout: 1024

git:
  depth: 2
  submodules: false

env:
  global:
    - RUST_BACKTRACE=full

addons:
  apt:
    packages:
      - libssl-dev
      - autoconf
      - flex
      - bison
      - texinfo
      - libtool

before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then ulimit -n 8192; fi
  - export -f travis_nanoseconds
  - export -f travis_fold
  - export -f travis_time_start
  - export -f travis_time_finish

before_script:
  - cargo sweep --version || cargo install --git https://github.com/holmgr/cargo-sweep --rev 4770deda37a2203c783e301b8c0c895964e8971e
  - cargo sweep -s

script: ./devtools/ci/script.sh

before_cache:
  - rm -rf ./target/release
  - rm -rf ./target/debug/incremental/
  - cargo sweep -f || true

deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file: "releases/ckb_${TRAVIS_TAG}_${REL_PKG}"
  skip_cleanup: true
  prerelease: true
  on:
    tags: true
    condition: '"$GITHUB_TOKEN" != "" && "$REL_PKG" != ""'

matrix:
  include:
    - name: Tests on macOS
      if: 'tag IS NOT present AND (type == pull_request OR repo != nervosnetwork/ckb OR branch = master)'
      os: osx
    - name: Tests on Linux
      if: 'tag IS NOT present AND (type == pull_request OR repo != nervosnetwork/ckb OR branch = master)'
      os: linux
    - name: Quick Check
      if: 'tag IS NOT present AND (type == pull_request OR repo != nervosnetwork/ckb OR branch = master)'
      cache: false
      before_script: skip
      addons: { apt: { packages: [] } }
      script:
        - make cargo-license
        - make check-dirty-doc

    - name: Integration on macOS
      if: 'tag IS NOT present AND type != pull_request'
      os: osx
      script: make integration
    - name: Integration on Linux
      if: 'tag IS NOT present AND type != pull_request'
      os: linux
      script: make integration

    - name: Package for macOS
      if: 'tag IS present AND env(GITHUB_TOKEN) IS present'
      os: osx
      env: REL_PKG=x86_64-apple-darwin.zip
      before_script: skip
      cache:
        directories:
          - $HOME/.cargo
      before_cache:
        rm -rf $HOME/.cargo/registry
      script:
        - git fetch --unshallow
        - make prod
        - devtools/ci/package.sh target/release/ckb
    - name: Package for Linux
      if: 'tag IS present AND env(GITHUB_TOKEN) IS present'
      os: linux
      env: REL_PKG=x86_64-unknown-linux-gnu.tar.gz
      before_script: skip
      cache:
        directories:
          - $HOME/.cargo
      before_cache:
        rm -rf $HOME/.cargo/registry
      script:
        - git fetch --unshallow
        - make prod
        - devtools/ci/package.sh target/release/ckb
    - name: Package for Centos
      if: 'tag IS present AND env(GITHUB_TOKEN) IS present'
      language: ruby
      addons: { apt: { packages: [] } }
      before_script: skip
      cache: false
      script: devtools/ci/centos-docker.sh run
      env: REL_PKG=x86_64-unknown-centos-gnu.tar.gz
