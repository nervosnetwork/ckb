[package]
name = "ckb-test"
version = "0.100.0-pre"
license = "MIT"
authors = ["Nervos Core Dev <dev@nervos.org>"]
edition = "2018"
description = "CKB integration tests."
homepage = "https://github.com/nervosnetwork/ckb"
repository = "https://github.com/nervosnetwork/ckb"

[dependencies]
clap = { version = "2" }
toml = "0.5.0"
ckb-jsonrpc-types = { path = "../util/jsonrpc-types", version = "= 0.100.0-pre" }
ckb-app-config = { path = "../util/app-config", version = "= 0.100.0-pre" }
ckb-network = { path = "../network", version = "= 0.100.0-pre" }
ckb-channel = { path = "../util/channel", version = "= 0.100.0-pre" }
ckb-types = { path = "../util/types", version = "= 0.100.0-pre" }
ckb-hash = { path = "../util/hash", version = "= 0.100.0-pre" }
ckb-util = { path = "../util", version = "= 0.100.0-pre" }
ckb-chain-spec = { path = "../spec", version = "= 0.100.0-pre" }
ckb-crypto = { path = "../util/crypto", version = "= 0.100.0-pre" }
ckb-dao-utils = { path = "../util/dao/utils", version = "= 0.100.0-pre" }
ckb-test-chain-utils = { path = "../util/test-chain-utils", version = "= 0.100.0-pre" }
ckb-resource = { path = "../resource", version = "= 0.100.0-pre" }
ckb-async-runtime = { path = "../util/runtime", version = "= 0.100.0-pre" }
ckb-stop-handler = { path = "../util/stop-handler", version = "= 0.100.0-pre" }
ckb-logger = { path = "../util/logger", version = "= 0.100.0-pre" }
ckb-logger-config = { path = "../util/logger-config", version = "= 0.100.0-pre" }
ckb-logger-service = { path = "../util/logger-service", version = "= 0.100.0-pre" }
ckb-error = { path = "../error", version = "= 0.100.0-pre" }
ckb-constant = { path = "../util/constant", version = "= 0.100.0-pre" }
tempfile = "3.0"
reqwest = { version = "0.11.4", features = ["blocking", "json"] }
rand = "0.7"
faketime = "0.2"
serde_json = "1.0"
lazy_static = "1.4.0"
byteorder = "1.3.1"
jsonrpc-core = "18.0"

[target.'cfg(target_os="linux")'.dependencies]
nix = "0.20.0"

# Prevent this from interfering with workspaces
[workspace]
members = ["."]

[profile.release.build-override]
opt-level = 3

[profile.bench.build-override]
opt-level = 3
