trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

jobs:
  - job: UnitTest
    condition: |
      and(
        not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')),
        or(
          eq(variables['Build.Reason'], 'PullRequest'),
          eq(variables['Build.SourceBranch'], 'refs/heads/master')
        )
      )
    pool:
      vmImage: 'VS2017-Win2016'
    steps:
      - template: devtools/azure/windows-dependencies.yml
        parameters:
          rustup_toolchain: '1.34.2-x86_64-pc-windows-msvc'
      - script: make test
        displayName: Run unit tests
        env:
          CI: true

  - job: IntegrationTest
    condition: |
      and(
        not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')),
        ne(variables['Build.Reason'], 'PullRequest'),
        or(
          startsWith(variables['Build.SourceBranch'], 'refs/heads/pr-mirror/'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/rc/'),
          in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/develop')
        )
      )
    pool:
      vmImage: 'VS2017-Win2016'
    steps:
      - template: devtools/azure/windows-dependencies.yml
        parameters:
          rustup_toolchain: '1.34.2-x86_64-pc-windows-msvc'
      - script: make integration-windows
        displayName: Run integration tests
        env:
          CI: true

  - job: Package
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    pool:
      vmImage: 'VS2017-Win2016'
    steps:
      - template: devtools/azure/windows-dependencies.yml
        parameters:
          rustup_toolchain: '1.34.2-x86_64-pc-windows-msvc'
      - script: make prod
        displayName: Build
      - powershell: |
          mkdir ckb_$(Build.SourceBranchName)_x86_64-pc-windows-msvc
          cp -r target/release/ckb.exe,README.md,CHANGELOG.md,COPYING,docs ckb_$(Build.SourceBranchName)_x86_64-pc-windows-msvc
          cp rpc/README.md ckb_$(Build.SourceBranchName)_x86_64-pc-windows-msvc/docs/rpc.md
        displayName: Prepare archive
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: 'ckb_$(Build.SourceBranchName)_x86_64-pc-windows-msvc'
          archiveFile: '$(Build.ArtifactStagingDirectory)/ckb_$(Build.SourceBranchName)_x86_64-pc-windows-msvc.zip'
      - script: choco install -y gpg4win
        displayName: Install GPG4Win
      - task: DownloadSecureFile@1
        inputs:
          secureFile: azure-secret.asc
      - script: |
          set PATH=%PATH%;%ProgramFiles(x86)%/GnuPG/bin
          gpg --import %DOWNLOADSECUREFILE_SECUREFILEPATH%
          echo "##vso[task.setvariable variable=PATH;]%PATH%;%ProgramFiles(x86)%/GnuPG/bin"
        displayName: Setup GPG
      - script: |
          gpg -u "Nervos Azure Builder <bot@nervos.org>" -ab "$(Build.ArtifactStagingDirectory)/ckb_$(Build.SourceBranchName)_x86_64-pc-windows-msvc.zip"
        displayName: Sign Archive
      - task: GitHubRelease@0
        inputs:
          gitHubConnection: nervos-bot
          repositoryName: nervosnetwork/ckb
          action: edit
          tag: $(Build.SourceBranchName)
          assets: |
            $(Build.ArtifactStagingDirectory)/*.zip
            $(Build.ArtifactStagingDirectory)/*.asc
          assetUploadMode: replace
          isPreRelease: true
          addChangeLog: false
